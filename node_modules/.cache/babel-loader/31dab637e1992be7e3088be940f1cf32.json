{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abkha\\\\OneDrive\\\\Skrivbord\\\\react-gruppuppgift\\\\src\\\\pages\\\\Items.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Items() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetchPosts();\n  }, []); // Second arg as empty array, means run once only on load. = ComponentDidMount\n\n  const fetchPosts = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/posts');\n\n      if (!response.ok) {\n        throw new Error('HTTP Error! status: ' + response.status);\n      }\n\n      const data = await response.json();\n      setPosts(data);\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 28\n        }, this), post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Content: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 28\n        }, this), post.content, \"...\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"See more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 80\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Author: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 28\n        }, this), \" \", post.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 28\n        }, this), \" \", post.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Tags: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 28\n        }, this), \" \", post.tags]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)]\n    }, post['_id'], true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Items, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = Items;\nexport default Items;\n\nvar _c;\n\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"sources":["C:/Users/Abkha/OneDrive/Skrivbord/react-gruppuppgift/src/pages/Items.js"],"names":["React","useState","useEffect","Link","Items","posts","setPosts","fetchPosts","response","fetch","ok","Error","status","data","json","console","log","error","map","post","title","content","author","date","tags"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACbK,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT,CAHa,CAKN;;AAEP,QAAMA,UAAU,GAAG,YAAY;AAC3B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;;AAEA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAW,yBAAyBH,QAAQ,CAACI,MAA7C,CAAN;AACH;;AACD,YAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACAR,MAAAA,QAAQ,CAACO,IAAD,CAAR;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEH,KAVD,CAUE,OAAOI,KAAP,EAAc;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AAEJ,GAfD;;AAiBA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAIQZ,KAAK,CAACa,GAAN,CAAWC,IAAI,iBACX;AAAA,8BAEI;AAAA,gCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,EAA4BA,IAAI,CAACC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,gCAAG;AAAA,+CAAiB;AAAA;AAAA;AAAA;AAAA,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,EAAuCD,IAAI,CAACE,OAA5C,sBAAuD;AAAG,UAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,gCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,OAA8BF,IAAI,CAACG,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,gCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,OAA4BH,IAAI,CAACI,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,OAA4BJ,IAAI,CAACK,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA,OAAgBL,IAAI,CAAC,KAAD,CAApB;AAAA;AAAA;AAAA;AAAA,YADJ,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA5CQf,K;;KAAAA,K;AA8CT,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Items() {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect (() => {\r\n        fetchPosts();\r\n    }, []) // Second arg as empty array, means run once only on load. = ComponentDidMount\r\n\r\n    const fetchPosts = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/posts');\r\n            \r\n            if (!response.ok) {\r\n                throw new Error ('HTTP Error! status: ' + response.status);\r\n            }\r\n            const data = await response.json();\r\n            setPosts(data);\r\n            console.log(data);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Items</h1>\r\n\r\n            {\r\n                posts.map( post => (\r\n                    <article key = {post['_id']}>\r\n                        {/* <hr/> */}\r\n                        <p><strong>Title: </strong>{post.title}</p>\r\n                        <p><strong>Content: <br></br></strong>{post.content}...<a href=\"#\">See more</a></p>\r\n                        <p><strong>Author: </strong> {post.author}</p>\r\n                        <p><strong>Date: </strong> {post.date}</p>\r\n                        <p><strong>Tags: </strong> {post.tags}</p>\r\n                        <br></br>\r\n                        <hr/>\r\n                    </article>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Items\r\n"]},"metadata":{},"sourceType":"module"}